"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["toggle-switch","btford.socket-io","ngResource","ngAnimate","ngTable","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("events"),ApplicationConfiguration.registerModule("sensors"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","Socket","Sensors","Alarm","Alert",function($scope,Authentication,Socket,Sensors,Alarm,Alert){function switchalarmStatusClass(alarm){$scope.alarmStatus=alarm.status,alarm.siren?($scope.alarmStatus="!! Siren !!",$scope.alarmStatusClass="btn-danger"):"complet"===alarm.status?$scope.alarmStatusClass="btn-success":"perimetrique"===alarm.status?$scope.alarmStatusClass="btn-warning":$scope.alarmStatusClass="btn-default"}function updateAlarm(alarm){$scope.alarmStatus=alarm.status,switchalarmStatusClass(alarm),$scope.alertesCount=alarm.alertes,$scope.actionsCount=alarm.actions,$scope.alarmTempo=alarm.tempo}function isEmpty(value){return angular.isUndefined(value)||""===value||null===value||value!==value}$scope.authentication=Authentication,$scope.sensors=Sensors.query(),Alarm.get(function(alarm){updateAlarm(alarm)}),$scope.changeAlarmStatus=function(status){Socket.emit("alarm-status",status),Alarm.get(function(alarm){updateAlarm(alarm)})},$scope.$watch("alarmTempo",function(newValue,oldvalue){isEmpty(newValue)||newValue===oldvalue||Socket.emit("alarm-tempo",newValue)}),Socket.on("alarm-counters-updated",function(alarm){switchalarmStatusClass(alarm),$scope.alertesCount=alarm.alertes,$scope.actionsCount=alarm.actions,$scope.$apply()}),Socket.on("alarm-siren-on",function(alarm){switchalarmStatusClass(alarm),Alert.sent({message:"Alarm%20intrusion!"}),$scope.$apply()})}]),angular.module("core").controller("WeatherController",["$scope","weatherService",function($scope,weatherService){$scope.weather=weatherService.getWeather()}]),angular.module("core").directive("ngSensor",["Sensors","Socket",function(Sensors,Socket){return{scope:{id:"@"},templateUrl:"modules/core/views/partials/_sensor.html",restrict:"E",replace:!0,controller:["$scope",function($scope){Socket.on("sensor-hit",function(sensor){sensor.id===$scope.id&&$scope.switchSensorClass(sensor.active)})}],link:function($scope,element,attrs){$scope.switchSensorClass=function(active){active?$scope.sensorClass="btn-danger":$scope.sensorClass="btn-default"},$scope.sensor=Sensors.get({sensorId:$scope.id},function(sensor){$scope.switchSensorClass(sensor.active)})}}}]),angular.module("core").directive("weatherIcon",[function(){return{restrict:"E",replace:!0,scope:{icon:"@"},controller:["$scope",function($scope){$scope.imgurl=function(){return"http://openweathermap.org/img/w/"+$scope.icon+".png"},$scope.weatherClass=function(){return"01d"===$scope.icon?"wi-day-sunny":"02d"===$scope.icon?"wi-day-cloudy":"03d"===$scope.icon?"wi-cloud":"04d"===$scope.icon?"wi-cloudy":"09d"===$scope.icon?"wi-rain":"10d"===$scope.icon?"wi-day-rain":"11d"===$scope.icon?"wi-day-thunderstorm":"13d"===$scope.icon?"wi-snow":"50d"===$scope.icon?"wi-day-fog":"01n"===$scope.icon?"wi-night-clear":"02n"===$scope.icon?"wi-night-alt-cloudy":"03n"===$scope.icon?"wi-cloud":"04n"===$scope.icon?"wi-cloudy":"09n"===$scope.icon?"wi-rain":"10n"===$scope.icon?"wi-night-alt-sprinkle":"11n"===$scope.icon?"wi-night-thunderstorm":"13n"===$scope.icon?"wi-snow":"50n"===$scope.icon?"wi-day-fog":void 0}}],template:'<div style="float:left;" class="wi {{ weatherClass() }} weatherIcon"/>'}}]),angular.module("core").filter("temperature",["$filter",function($filter){return function(input,precision){precision||(precision=1);var numberFilter=$filter("number");return numberFilter(input,precision)+"Â°C"}}]),angular.module("core").factory("Alarm",["$resource",function($resource){return $resource("alarm")}]),angular.module("core").factory("Alert",["$resource",function($resource){return $resource("alert/:message",{message:"@message"},{sent:{method:"GET",isArray:!1}})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("Sensors",["$resource",function($resource){return $resource("sensors/:sensorId",{sensorId:"@_id"})}]),angular.module("core").factory("smsApiService",["$http","Alert",function($http,Alert){return{sentSms:function(){console.log("smsApiService sent SMS..."),Alert.sent()}}}]),angular.module("core").factory("Socket",["socketFactory","$location",function(socketFactory,$location){return console.log("socketFactory "+$location.host()+" port:"+$location.port()),socketFactory({prefix:"",ioSocket:io.connect($location.protocol()+"://"+$location.host()+":"+$location.port())})}]),angular.module("core").factory("weatherService",["$http",function($http){return{getWeather:function(){var weather={name:{},weather:{},temp:{},clouds:null},url="http://api.openweathermap.org/data/2.5/weather?q=Pontoise,Fr&units=metric&callback=JSON_CALLBACK&lang=fr";return $http.jsonp(url).success(function(data){data&&(data.main&&(weather.name=data.name,weather.icon=data.weather[0].icon,weather.desciption=data.weather[0].description,weather.temp.current=data.main.temp,weather.temp.min=data.main.temp_min,weather.temp.max=data.main.temp_max),weather.clouds=data.clouds?data.clouds.all:void 0)}),weather}}}]),angular.module("events").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Events","events","dropdown","/events(/create)?"),Menus.addSubMenuItem("topbar","events","List Events","events")}]),angular.module("events").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEvents",{url:"/events",templateUrl:"modules/events/views/list-events.client.view.html"})}]),angular.module("events").controller("EventsController",["$scope","$http","$stateParams","$location","Authentication","Events","Socket","ngTableParams",function($scope,$http,$stateParams,$location,Authentication,Events,Socket,NgTableParams){$scope.authentication=Authentication,$scope.tableEvents=new NgTableParams({page:1,count:10,sorting:{created:"asc"}},{getData:function($defer,params){var total;$http.get("/events/count/").success(function(count){total=count}).error(function(response){$scope.error=response.message}),$http.get("/events/pageNumber/"+params.page()+"/nPerPage/"+params.count(),{headers:{"Content-Type":"application/json"}}).success(function(events){$scope.events=events,params.total(total),$defer.resolve(events)}).error(function(response){$scope.error=response.message})}}),Socket.on("event",function(event){console.log("EventsController event:"+event),$scope.tableEvents.reload()})}]),angular.module("events").factory("Events",["$resource",function($resource){return $resource("events/:eventId",{eventId:"@_id"})}]),angular.module("sensors").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Sensors","sensors","dropdown","/sensors(/create)?"),Menus.addSubMenuItem("topbar","sensors","List Sensors","sensors")}]),angular.module("sensors").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSensors",{url:"/sensors",templateUrl:"modules/sensors/views/list-sensors.client.view.html"}).state("viewSensor",{url:"/sensors/:sensorId",templateUrl:"modules/sensors/views/view-sensor.client.view.html"})}]),angular.module("sensors").controller("SensorsController",["$scope","$stateParams","$location","Authentication","Sensors",function($scope,$stateParams,$location,Authentication,Sensors){$scope.authentication=Authentication,$scope.create=function(){var sensor=new Sensors({id:this.id,description:this.description});sensor.$save(function(response){$location.path("sensors/"+response.id),$scope.id="",$scope.description=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(sensor){if(sensor){sensor.$remove();for(var i in $scope.sensors)$scope.sensors[i]===sensor&&$scope.sensors.splice(i,1)}else $scope.sensor.$remove(function(){$location.path("sensors")})},$scope.update=function(){var sensor=$scope.sensor;sensor.$update(function(){$location.path("sensors/"+sensor.id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.sensors=Sensors.query()},$scope.findOne=function(){$scope.sensor=Sensors.get({sensorId:$stateParams.sensorId})}}]),angular.module("sensors").factory("Sensors",["$resource",function($resource){return $resource("sensors/:sensorId",{sensorId:"@id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);